from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.config import cakes  # –ò–º–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–∞ —Ç–æ—Ä—Ç–æ–≤ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

# –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é"
start = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é üç∞", callback_data="list_menu")],
])

ITEMS_PER_PAGE = 5  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—Ä—Ç–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –º–µ–Ω—é

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ—Ä—Ç–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
async def list_menu(page: int = 0) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()
    
    # –í—ã—á–∏—Å–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω —Ç–æ—Ä—Ç–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * ITEMS_PER_PAGE
    end_idx = start_idx + ITEMS_PER_PAGE
    paginated_cakes = cakes[start_idx:end_idx]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ—Ä—Ç–∞
    for cake in paginated_cakes:
        keyboard.add(InlineKeyboardButton(
            text=cake["name"],
            callback_data=f"view_cake_{cakes.index(cake)}"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–¥–µ–∫—Å —Ç–æ—Ä—Ç–∞
        ))

    keyboard.adjust(1)  # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–Ω–∞–∑–∞–¥ –∏ –≤–ø–µ—Ä–µ–¥)
    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"menu_page_{page - 1}"))
    if end_idx < len(cakes):
        nav_buttons.append(InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"menu_page_{page + 1}"))

    if nav_buttons:
        keyboard.row(*nav_buttons)  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É

    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard.row(InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_start"))

    return keyboard.as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Ç–æ—Ä—Ç–µ
async def view_cake(cake_index: int) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    order_button = InlineKeyboardButton(text="‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å", callback_data=f"order_cake_{cake_index}")
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –º–µ–Ω—é
    back_to_menu_button = InlineKeyboardButton(text="üç∞ –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é", callback_data=f"list_menu")

    keyboard.add(order_button)
    keyboard.add(back_to_menu_button)

    return keyboard.adjust(2).as_markup()  # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Å—Ç—Ä–æ–∫–µ


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ (–æ–ø–ª–∞—á–µ–Ω / –Ω–µ –æ–ø–ª–∞—á–µ–Ω)
async def order_status(status: bool, order_id: int) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —ç–º–æ–¥–∑–∏
    paid_emoji = "‚úÖ" if status else "‚ö™"
    unpaid_emoji = "‚ùå" if not status else "‚ö™"

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    button_paid = InlineKeyboardButton(text=f"{paid_emoji} –û–ø–ª–∞—á–µ–Ω–æ", callback_data=f"order_paid_{order_id}")
    button_unpaid = InlineKeyboardButton(text=f"{unpaid_emoji} –ù–µ –æ–ø–ª–∞—á–µ–Ω–æ", callback_data=f"order_unpaid_{order_id}")

    keyboard.row(button_paid, button_unpaid)

    return keyboard.as_markup()
